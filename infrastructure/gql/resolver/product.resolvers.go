package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"github.com/99designs/gqlgen/plugin/federation/testdata/entityresolver/generated"
	"product-service-graphql/infrastructure/gql/executable"
	"product-service-graphql/infrastructure/gql/models"
)

// CreateProduct is the resolver for the CreateProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, request models.ProductRequest) (*models.ProductResponse, error) {
	panic(fmt.Errorf("not implemented: CreateProduct - CreateProduct"))
}

// GetAllProduct is the resolver for the GetAllProduct field.
func (r *queryResolver) GetAllProduct(ctx context.Context) (*models.ProductResponse, error) {
	panic(fmt.Errorf("not implemented: GetAllProduct - GetAllProduct"))
}

// GetProductByID is the resolver for the GetProductById field.
func (r *queryResolver) GetProductByID(ctx context.Context, id string) (*models.ProductResponse, error) {
	panic(fmt.Errorf("not implemented: GetProductByID - GetProductById"))
}

// Mutation returns executable.MutationResolver implementation.
func (r *Resolver) Mutation() executable.MutationResolver { return &mutationResolver{r} }

// Query returns executable.QueryResolver implementation.
func (r *Resolver) Query() executable.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

func (r *Resolver) Entity() generated.EntityResolver {
	return nil
}
